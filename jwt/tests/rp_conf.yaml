port: &port 8090
domain: &domain 127.0.0.1
base_url: "https://{domain}:{port}"

httpc_params:
  # This is just for testing a local usage. In all other cases it MUST be True
  verify: false
  # Client side
  #client_cert: "certs/client.crt"
  #client_key: "certs/client.key"

keydefs: &keydef
  - "type": "RSA"
    "key": ''
    "use": ["sig"]
  - "type": "EC"
    "crv": "P-256"
    "use": ["sig"]

rp_keys:
  'private_path': 'private/jwks.json'
  'key_defs': *keydef
  'public_path': 'static/jwks.json'
  # this will create the jwks files if they are absent
  'read_only': False

client_preferences: &id001
  application_name: rphandler
  application_type: web
  contacts:
    - ops@example.com
  response_types:
    - code
  scope:
    - openid
    - profile
    - email
    - address
    - phone
  token_endpoint_auth_method:
    - client_secret_basic
    - client_secret_post

services: &id002
  discovery: &disc
    class: oidcservice.oidc.provider_info_discovery.ProviderInfoDiscovery
    kwargs: {}
  registration: &regist
    class: oidcservice.oidc.registration.Registration
    kwargs: {}
  authorization: &authz
    class: oidcservice.oidc.authorization.Authorization
    kwargs: {}
  accesstoken: &acctok
    class: oidcservice.oidc.access_token.AccessToken
    kwargs: {}
  userinfo: &userinfo
    class: oidcservice.oidc.userinfo.UserInfo
    kwargs: {}
  end_session: &sess
    class: oidcservice.oidc.end_session.EndSession
    kwargs: {}

clients:
  "":
    client_preferences: *id001
    redirect_uris: None
    services: *id002
  flop:
    client_preferences: *id001
    issuer: https://127.0.0.1:5000/
    redirect_uris:
      - 'https://{domain}:{port}/authz_cb/flop'
    post_logout_redirect_uris:
      - "https://{domain}:{port}/session_logout/flop"
    frontchannel_logout_uri: "https://{domain}:{port}/fc_logout/flop"
    frontchannel_logout_session_required: True
    backchannel_logout_uri: "https://{domain}:{port}/bc_logout/flop"
    backchannel_logout_session_required: True
    services:
      discovery: *disc
      registration: *regist
      authorization: *authz
      accesstoken: *acctok
      userinfo: *userinfo
      end_session: *sess
    add_ons:
      pkce:
        function: oidcservice.oidc.add_on.pkce.add_pkce_support
        kwargs:
          code_challenge_length: 64
          code_challenge_method: S256
#      status_check:
#        function: oidcservice.oidc.add_on.status_check.add_status_check_support
#        kwargs:
#          rp_iframe_path: "templates/rp_iframe.html"
  bobcat:
    client_id: client3
    client_secret: 'abcdefghijklmnop'
    client_preferences: *id001
    issuer: http://127.0.0.1:8080/
    jwks_uri: 'static/jwks.json'
    redirect_uris: ['https://{domain}:{port}/authz_cb/bobcat']
    post_logout_redirect_uris:
      - "https://{domain}:{port}/session_logout/bobcat"
    services: *id002
    request_args:
      claims:
        id_token:
          acr:
            essential:
              true
